* Formatting text
** Simple formatting
You can apply simple formatting to your text by enclosing words in special
characters. These include
 - /italicised text/
 - *bold text*
 - _underlines_
 - =literal text=
 - ~code~

** Formatted blocks of text
For longer pieces of text you can enclose the text in blocks marking it as
aspecific sort of text. I commonly use these ones

#+BEGIN_EXAMPLE
This is an example block into which you can type text that you don't want org to
mess with like a [[link]]. This will typically be rendered in a monospace font when exported.
#+END_EXAMPLE

#+BEGIN_QUOTE
This block encloses text that you want to appear as a quotation.
#+END_QUOTE

#+BEGIN_CENTER
This text will be centered when it is exported.
#+END_CENTER

You can save time typing out the block wrapper by using shortcuts. Go to the
start of a new line and type <e and press TAB and it will expand to an example
block. The same works for <q for quote and <c for center.

** LaTeX
Org-mode does a good job of understanding snippets of LaTeX (a [[https://www.latex-project.org/][typesetting
language]] used in scientific and other technical documents). For example, it will
correctly export simple superscripts x^2 or subscript x_0 or symbols like
\alpha, \beta, \gamma.

Org also understands more complex LaTeX like this

\begin{eqnarray}
x^2 + \left(\frac{y}{z}\right)^4 = 0
\end{eqnarray}

but for longer bits of LaTeX it is better to use a LaTeX block. You start one
with <1 and TAB

#+BEGIN_EXPORT latex
LaTeX code goes heren
#+END_EXPORT

** Source code blocks
It is also handy to include source code in your notes - on a new line type <s
and TAB to create a source block. You can tell org what type of code is
contained - in this case we'll put in some simple shell code, so we'll put "sh"
at the top of the block.

#+BEGIN_SRC sh
echo "Hello $USER! Today is `date`"
exit
#+END_SRC

#+BEGIN_SRC elisp
;;syntax highlight code blocks
(setq org-src-fontify-natively t)
#+END_SRC

What is more, when the cursor is inside a SRC block, you can use C-c ' to create
a new temporary buffer in the major mode of the programming language you have
specified. Type some code in, and then type C-c ' again to come back to this
buffer.

** Executing source code blocks
Org-mode can execute your source code blocks and add the output to your
file. This part of org-mode is called babel. I'll write more about this later,
but it is too cool not to mention here.

For example, take the simple code block we had above:

#+BEGIN_SRC sh
echo "Hello $USER! Today is `date`"
exit
#+END_SRC

#+RESULTS:
: Hello yang! Today is Sun Jan  6 19:12:11 EST 2019

You can do much more with this, like reading input data from a table in the same
file, creating images that apprear in the file, extracting (tangling) all the
code snippets into one or more files to be executed separately, and much more.
[[http://orgmode.org/worg/org-contrib/babel/intro.html][Here are some nice examples]].
